import{d as t}from"./index-BsFjX4xQ.js";const i=e=>{t.image("Image upload started",{fileName:e.name,fileSize:g(e.size),fileType:e.type,lastModified:new Date(e.lastModified).toLocaleString()},"ImageUpload")},c=(e,a)=>{t.image("Image processed",{imageUrlLength:e.length,imageUrlPrefix:e.substring(0,30)+"...",imagePreviewType:a.startsWith("blob:")?"Blob URL":"Data URL",imagePreview:a.substring(0,30)+"..."},"ImageProcessing")},d=(e,a,o,r)=>{o?t.image(`Image stored in ${a}`,{id:e,...r},"ImageStorage"):t.error(`Failed to store image in ${a}`,{id:e,...r},"ImageStorage")},l=(e,a)=>{t.supabase(`Supabase operation: ${e}`,a,"Supabase")},u=(e,a)=>{const o=a instanceof Error?a.message:"Unknown error",r=a instanceof Error?a.stack:a;t.error(`Supabase error in ${e}`,{message:o,details:r},"Supabase")},g=e=>{if(e===0)return"0 Bytes";const a=1024,o=["Bytes","KB","MB","GB"],r=Math.floor(Math.log(e)/Math.log(a));return parseFloat((e/Math.pow(a,r)).toFixed(2))+" "+o[r]},p=async(e,a)=>{const o=performance.now();try{const r=await a(),n=performance.now()-o;return t.debug(`Performance: ${e}`,{duration:`${n.toFixed(2)}ms`},"Performance"),r}catch(r){const n=performance.now()-o;throw t.error(`Performance error: ${e}`,{duration:`${n.toFixed(2)}ms`,error:r},"Performance"),r}},b=(e,a)=>{i(e);const o=URL.createObjectURL(e),r=new FileReader;r.onloadend=()=>{const s=r.result;c(s,o),console.log("Image uploaded:",{fileName:e.name,fileSize:e.size,fileType:e.type,imageUrlPrefix:s.substring(0,30)+"...",imagePreview:o}),a(s,o)},r.onerror=s=>{console.error("Error reading file:",s)},r.readAsDataURL(e)},f=e=>{e.startsWith("blob:")&&URL.revokeObjectURL(e)};export{d as a,u as b,f as c,l as d,b as h,p as m};
