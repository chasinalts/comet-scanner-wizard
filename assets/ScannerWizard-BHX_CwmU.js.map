{"version":3,"file":"ScannerWizard-BHX_CwmU.js","sources":["../../src/components/ui/Modal.tsx","../../src/utils/memoization.ts","../../src/hooks/useAdminContent.ts","../../src/components/LiveCodePreview.tsx","../../src/hooks/useQuestions.ts","../../src/hooks/useSections.ts","../../node_modules/idb/build/index.js","../../src/hooks/useImageDB.ts","../../src/hooks/useImageBridge.ts","../../src/components/ui/FormField.tsx","../../src/components/ui/ImageDisplay.tsx","../../src/pages/ScannerWizard.tsx"],"sourcesContent":["import { Fragment, ReactNode } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: ReactNode;\n  footer?: ReactNode;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  showCloseButton?: boolean;\n}\n\nconst overlayVariants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 }\n};\n\nconst modalVariants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.95,\n    y: 20\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n      damping: 25,\n      stiffness: 300\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    y: 20,\n    transition: {\n      duration: 0.2\n    }\n  }\n};\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  footer,\n  size = 'md',\n  showCloseButton = true\n}: ModalProps) => {\n  const sizeClasses = {\n    sm: 'max-w-md',\n    md: 'max-w-lg',\n    lg: 'max-w-2xl',\n    xl: 'max-w-4xl'\n  }[size];\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      {isOpen && (\n        <Fragment>\n          {/* Backdrop */}\n          <motion.div\n            variants={overlayVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            onClick={onClose}\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\n          />\n\n          {/* Modal */}\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n            <motion.div\n              variants={modalVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              className={`${sizeClasses} w-full bg-white rounded-lg shadow-xl`}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {/* Header */}\n              <div className=\"flex items-center justify-between px-6 py-4 border-b\">\n                <h3 className=\"text-xl font-semibold text-gray-900\">{title}</h3>\n                {showCloseButton && (\n                  <button\n                    onClick={onClose}\n                    className=\"text-gray-400 hover:text-gray-500 focus:outline-none\"\n                  >\n                    <svg\n                      className=\"h-6 w-6\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M6 18L18 6M6 6l12 12\"\n                      />\n                    </svg>\n                  </button>\n                )}\n              </div>\n\n              {/* Content */}\n              <div className=\"px-6 py-4\">{children}</div>\n\n              {/* Footer */}\n              {footer && (\n                <div className=\"px-6 py-4 border-t bg-gray-50 rounded-b-lg\">\n                  {footer}\n                </div>\n              )}\n            </motion.div>\n          </div>\n        </Fragment>\n      )}\n    </AnimatePresence>\n  );\n};\n\n// Convenience component for confirmation dialogs\nexport const ConfirmModal = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  title,\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  confirmVariant = 'danger'\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  confirmVariant?: 'primary' | 'danger';\n}) => {\n  const confirmButtonClasses = {\n    primary: 'bg-blue-600 hover:bg-blue-700 focus:ring-blue-500',\n    danger: 'bg-red-600 hover:bg-red-700 focus:ring-red-500'\n  }[confirmVariant];\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={title}\n      size=\"sm\"\n      footer={\n        <div className=\"flex justify-end space-x-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-white border text-gray-700 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n          >\n            {cancelText}\n          </button>\n          <button\n            onClick={() => {\n              onConfirm();\n              onClose();\n            }}\n            className={`px-4 py-2 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 ${confirmButtonClasses}`}\n          >\n            {confirmText}\n          </button>\n        </div>\n      }\n    >\n      <p className=\"text-gray-700\">{message}</p>\n    </Modal>\n  );\n};\n\nexport default Modal;","/**\n * Memoization utility for caching expensive function results\n */\n\ninterface CacheItem<T> {\n  value: T;\n  expiry: number | null;\n}\n\ninterface MemoizeOptions {\n  maxCacheSize?: number;\n  ttl?: number; // Time to live in milliseconds\n}\n\n// Simple LRU cache implementation\nclass LRUCache<T> {\n  private cache: Map<string, CacheItem<T>>;\n  private maxSize: number;\n\n  constructor(maxSize: number = 100) {\n    this.cache = new Map();\n    this.maxSize = maxSize;\n  }\n\n  get(key: string): T | undefined {\n    const item = this.cache.get(key);\n\n    if (!item) return undefined;\n\n    // Check if item has expired\n    if (item.expiry && Date.now() > item.expiry) {\n      this.cache.delete(key);\n      return undefined;\n    }\n\n    // Move to the end to mark as recently used\n    this.cache.delete(key);\n    this.cache.set(key, item);\n\n    return item.value;\n  }\n\n  set(key: string, value: T, ttl: number | null = null): void {\n    // If cache is full, remove the least recently used item (first item)\n    if (this.cache.size >= this.maxSize) {\n      const firstKey = this.cache.keys().next().value;\n      if (firstKey) {\n        this.cache.delete(firstKey);\n      }\n    }\n\n    const expiry = ttl ? Date.now() + ttl : null;\n    this.cache.set(key, { value, expiry });\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n}\n\n/**\n * Memoizes a function to cache its results\n * @param fn The function to memoize\n * @param options Memoization options\n * @returns Memoized function\n */\nexport function memoize<T extends (...args: any[]) => any>(\n  fn: T,\n  options: MemoizeOptions = {}\n): T {\n  const { maxCacheSize = 100, ttl = null } = options;\n  const cache = new LRUCache<ReturnType<T>>(maxCacheSize);\n\n  const memoized = ((...args: Parameters<T>): ReturnType<T> => {\n    // Create a cache key from the function arguments\n    const key = JSON.stringify(args);\n\n    // Check if result is in cache\n    const cachedResult = cache.get(key);\n    if (cachedResult !== undefined) {\n      return cachedResult;\n    }\n\n    // Calculate result and store in cache\n    const result = fn(...args);\n\n    // Handle promises\n    if (result instanceof Promise) {\n      // For promises, we store the promise in the cache\n      // and update it with the resolved value when it completes\n      cache.set(key, result as ReturnType<T>, ttl);\n\n      return result.then((value) => {\n        cache.set(key, value as ReturnType<T>, ttl);\n        return value;\n      }).catch((error) => {\n        // Remove failed promises from cache\n        cache.get(key) === result && cache.set(key, undefined as any, 0);\n        throw error;\n      }) as ReturnType<T>;\n    }\n\n    // For non-promises, just store the result\n    cache.set(key, result, ttl);\n    return result;\n  }) as T;\n\n  // Add a method to clear the cache\n  (memoized as any).clearCache = () => {\n    cache.clear();\n  };\n\n  return memoized;\n}\n\n/**\n * Creates a debounced function that delays invoking the provided function\n * until after the specified wait time has elapsed since the last time it was invoked.\n * @param fn The function to debounce\n * @param wait The number of milliseconds to delay\n * @returns Debounced function\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: number | undefined;\n\n  return function(this: any, ...args: Parameters<T>): void {\n    const later = () => {\n      timeout = undefined;\n      fn.apply(this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = window.setTimeout(later, wait);\n  };\n}\n\n/**\n * Creates a throttled function that only invokes the provided function\n * at most once per every specified wait period.\n * @param fn The function to throttle\n * @param wait The number of milliseconds to throttle invocations to\n * @returns Throttled function\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  wait: number\n): (...args: Parameters<T>) => ReturnType<T> | undefined {\n  let lastCall = 0;\n  let result: ReturnType<T> | undefined;\n\n  return function(this: any, ...args: Parameters<T>): ReturnType<T> | undefined {\n    const now = Date.now();\n\n    if (now - lastCall >= wait) {\n      lastCall = now;\n      result = fn.apply(this, args);\n    }\n\n    return result;\n  };\n}\n","import { useState, useEffect, useMemo, useCallback } from 'react';\nimport { memoize } from '../utils/memoization';\n\nexport interface ContentItem {\n  id: string;\n  type: 'banner' | 'scanner' | 'template' | 'question';\n  title: string;\n  content: string;\n  imageUrl?: string;\n  scale?: number;\n  displayText?: string;\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface ImageContent {\n  id: string;\n  src: string;\n  alt: string;\n  scale?: number;\n  displayText?: string;\n}\n\nexport interface AdminContentHook {\n  getBannerImage: () => ImageContent | null;\n  getScannerImages: () => ImageContent[];\n  getTemplates: () => Array<{\n    id: string;\n    title: string;\n    code: string;\n  }>;\n  getQuestions: () => Array<{\n    id: string;\n    title: string;\n    text: string;\n  }>;\n  hasContent: boolean;\n}\n\nexport const useAdminContent = (): AdminContentHook => {\n  const [contents, setContents] = useState<ContentItem[]>([]);\n\n  useEffect(() => {\n    const loadContents = () => {\n      const savedContents = localStorage.getItem('admin_contents');\n      if (savedContents) {\n        setContents(JSON.parse(savedContents));\n      }\n    };\n\n    loadContents();\n\n    // Listen for storage changes\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === 'admin_contents') {\n        loadContents();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Memoize the filter function for banner images\n  const filterBanners = useMemo(() =>\n    memoize((items: ContentItem[]) => items.filter(item => item.type === 'banner')),\n    []\n  );\n\n  const getBannerImage = useCallback((): ImageContent | null => {\n    const banners = filterBanners(contents);\n    if (banners.length === 0) return null;\n\n    const banner = banners[banners.length - 1];\n\n    // Debug: Log the banner image being retrieved\n    console.log('Retrieved banner image:', {\n      id: banner.id,\n      imageUrl: banner.imageUrl ? banner.imageUrl.substring(0, 30) + '...' : 'none',\n      title: banner.title,\n      scale: banner.scale,\n      displayText: banner.displayText\n    });\n\n    return {\n      id: banner.id,\n      src: banner.imageUrl || '',\n      alt: banner.title,\n      scale: banner.scale || 1,\n      displayText: banner.displayText\n    };\n  }, [contents, filterBanners]);\n\n  // Memoize the filter and transform functions for scanner images\n  const filterScanners = useMemo(() =>\n    memoize((items: ContentItem[]) => items.filter(item => item.type === 'scanner')),\n    []\n  );\n\n  const sortByUpdatedAt = useMemo(() =>\n    memoize((items: ContentItem[]) => [...items].sort((a, b) => b.updatedAt - a.updatedAt)),\n    []\n  );\n\n  const transformToImageContent = useMemo(() =>\n    memoize((items: ContentItem[]): ImageContent[] => {\n      const result = items.map(item => {\n        // Ensure we have valid values for all properties\n        const imageContent = {\n          id: item.id,\n          src: item.imageUrl || '',\n          alt: item.title || 'Image',\n          scale: item.scale || 1,\n          displayText: item.displayText || ''\n        };\n\n        // Debug: Log each transformed image\n        console.log(`Transformed image ${item.id}:`, {\n          src: imageContent.src ? imageContent.src.substring(0, 30) + '...' : 'none',\n          scale: imageContent.scale\n        });\n\n        return imageContent;\n      });\n\n      return result;\n    }),\n    []\n  );\n\n  const getScannerImages = useCallback((): ImageContent[] => {\n    const filtered = filterScanners(contents);\n    const sorted = sortByUpdatedAt(filtered);\n\n    // Debug: Log the scanner images being retrieved\n    console.log('Retrieved scanner images:', filtered.length);\n    if (filtered.length > 0) {\n      console.log('First scanner image:', {\n        id: filtered[0].id,\n        imageUrl: filtered[0].imageUrl ? filtered[0].imageUrl.substring(0, 30) + '...' : 'none',\n        title: filtered[0].title,\n        scale: filtered[0].scale,\n        displayText: filtered[0].displayText\n      });\n    }\n\n    const result = transformToImageContent(sorted);\n    return result;\n  }, [contents, filterScanners, sortByUpdatedAt, transformToImageContent]);\n\n  // Memoize the filter and transform functions for templates\n  const filterTemplates = useMemo(() =>\n    memoize((items: ContentItem[]) => items.filter(item => item.type === 'template')),\n    []\n  );\n\n  const transformToTemplates = useMemo(() =>\n    memoize((items: ContentItem[]) =>\n      items.map(item => ({\n        id: item.id,\n        title: item.title,\n        code: item.content\n      }))\n    ),\n    []\n  );\n\n  const getTemplates = useCallback(() => {\n    const filtered = filterTemplates(contents);\n    const sorted = sortByUpdatedAt(filtered);\n    return transformToTemplates(sorted);\n  }, [contents, filterTemplates, sortByUpdatedAt, transformToTemplates]);\n\n  // Memoize the filter and transform functions for questions\n  const filterQuestions = useMemo(() =>\n    memoize((items: ContentItem[]) => items.filter(item => item.type === 'question')),\n    []\n  );\n\n  const transformToQuestions = useMemo(() =>\n    memoize((items: ContentItem[]) =>\n      items.map(item => ({\n        id: item.id,\n        title: item.title,\n        text: item.content\n      }))\n    ),\n    []\n  );\n\n  const getQuestions = useCallback(() => {\n    const filtered = filterQuestions(contents);\n    const sorted = sortByUpdatedAt(filtered);\n    return transformToQuestions(sorted);\n  }, [contents, filterQuestions, sortByUpdatedAt, transformToQuestions]);\n\n  // Memoize the final result to prevent unnecessary re-renders\n  const result = useMemo(() => ({\n    getBannerImage,\n    getScannerImages,\n    getTemplates,\n    getQuestions,\n    hasContent: contents.length > 0\n  }), [getBannerImage, getScannerImages, getTemplates, getQuestions, contents.length]);\n\n  return result;\n};\n\nexport default useAdminContent;","import React, { useMemo, useCallback } from 'react';\nimport { useWizard } from '../contexts/WizardContext';\nimport type { Question, QuestionOption } from '../types/questions';\nimport type { Section } from '../hooks/useSections';\nimport { memoize } from '../utils/memoization';\n\nconst LiveCodePreview: React.FC = () => {\n  const { state } = useWizard();\n  const { answers, sections, questions } = state;\n\n  // Memoized helper functions for code generation\n  const getMandatorySections = useMemo(() =>\n    memoize((sectionList: Section[]) => {\n      return sectionList.filter(section => section.isMandatory);\n    }),\n    []\n  );\n\n  const findQuestionById = useMemo(() =>\n    memoize((questionList: Question[], id: string) => {\n      return questionList.find(q => q.id === id);\n    }),\n    []\n  );\n\n  const findSectionById = useMemo(() =>\n    memoize((sectionList: Section[], id: string) => {\n      return sectionList.find(s => s.id === id);\n    }),\n    []\n  );\n\n  const replacePlaceholders = useCallback((code: string, variable: string, value: string) => {\n    const regex = new RegExp(`{{\\\\s*${variable}\\\\s*}}`, 'g');\n    return code.replace(regex, value);\n  }, []);\n\n  const generateMandatoryCode = useCallback((mandatorySections: Section[]) => {\n    let code = '';\n    const includedIds = new Set<string>();\n\n    mandatorySections.forEach(section => {\n      code += `// --- Section: ${section.title} (Mandatory) ---\\n`;\n      code += section.code + '\\n\\n';\n      includedIds.add(section.id);\n    });\n\n    return { code, includedIds };\n  }, []);\n\n  const processAnswers = useCallback((answersObj: Record<string, any>, questionList: Question[], sectionList: Section[], includedIds: Set<string>) => {\n    let code = '';\n\n    Object.entries(answersObj).forEach(([questionId, answerValue]) => {\n      const question = findQuestionById(questionList, questionId);\n      if (!question) return;\n\n      let sectionIdToInclude: string | undefined;\n\n      if (question.type === 'choice' && answerValue) {\n        const selectedOptionIds = Array.isArray(answerValue) ? answerValue : [answerValue];\n        selectedOptionIds.forEach(optionValue => {\n          const selectedOption = question.options?.find((opt: QuestionOption) => opt.value === optionValue);\n          if (selectedOption?.linkedSectionId) {\n            sectionIdToInclude = selectedOption.linkedSectionId;\n          }\n        });\n      } else if ((question.type === 'text' || question.type === 'boolean') && question.linkedSectionId) {\n        sectionIdToInclude = question.linkedSectionId;\n      }\n\n      if (sectionIdToInclude && !includedIds.has(sectionIdToInclude)) {\n        const section = findSectionById(sectionList, sectionIdToInclude);\n        if (section) {\n          let sectionCode = section.code;\n          if (question.type === 'text' && question.placeholderVariable && typeof answerValue === 'string') {\n            sectionCode = replacePlaceholders(sectionCode, question.placeholderVariable, answerValue);\n          }\n          code += `// --- Section: ${section.title} (Linked by: ${question.text.substring(0, 20)}...) ---\\n`;\n          code += sectionCode + '\\n\\n';\n          includedIds.add(section.id);\n        }\n      } else if (question.type === 'text' && question.placeholderVariable && typeof answerValue === 'string' && !sectionIdToInclude) {\n         code += `// User input for \"${question.text.substring(0, 20)}...\": ${answerValue}\\n\\n`;\n      }\n    });\n\n    return code;\n  }, [findQuestionById, findSectionById, replacePlaceholders]);\n\n  const generatedCode = useMemo(() => {\n    // Get mandatory sections\n    const mandatorySections = getMandatorySections(sections);\n\n    // Generate code for mandatory sections\n    const { code: mandatoryCode, includedIds } = generateMandatoryCode(mandatorySections);\n\n    // Process answers and add linked sections\n    const answersCode = processAnswers(answers, questions, sections, includedIds);\n\n    // Combine the code\n    const finalCode = mandatoryCode + answersCode;\n\n    return finalCode.trim() || '// No code generated yet. Answer questions or mark sections as mandatory.';\n  }, [answers, sections, questions, getMandatorySections, generateMandatoryCode, processAnswers]);\n\n  return (\n    <div className=\"sticky top-4 h-[calc(100vh-2rem)] overflow-hidden rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n      <div className=\"bg-gray-100 dark:bg-gray-800 px-4 py-2 border-b border-gray-200 dark:border-gray-700\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Live Code Preview</h3>\n      </div>\n      <pre className=\"p-4 overflow-auto h-[calc(100%-41px)] bg-white dark:bg-gray-900 text-sm text-gray-800 dark:text-gray-200 font-mono\">\n        <code>{generatedCode}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default LiveCodePreview;","import { useState, useEffect } from 'react';\nimport type { Question, QuestionOption } from '../types/questions.ts';\nimport { cleanupImageUrl } from '../utils/imageHandlers';\n\nexport const useQuestions = () => {\n  const [questions, setQuestions] = useState<Question[]>(() => {\n    const savedQuestions = localStorage.getItem('admin_questions');\n    return savedQuestions ? JSON.parse(savedQuestions) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('admin_questions', JSON.stringify(questions));\n  }, [questions]);\n\n  // Cleanup image URLs on unmount\n  useEffect(() => {\n    return () => {\n      questions.forEach((question: Question) => {\n        question.options?.forEach((option: QuestionOption) => {\n          if (option.imagePreview) {\n            cleanupImageUrl(option.imagePreview);\n          }\n        });\n      });\n    };\n  }, [questions]);\n\n  const addQuestion = (type: Question['type']) => {\n    const newQuestion: Question = {\n      id: `question-${Date.now()}`,\n      type,\n      text: '',\n      required: false,\n      ...(type === 'choice' && { options: [] }),\n      ...(type === 'text' && { placeholderVariable: '' })\n    };\n    setQuestions(prev => [...prev, newQuestion]);\n  };\n\n  const updateQuestion = (id: string, updates: Partial<Question>) => {\n    setQuestions(prev =>\n      prev.map(q => (q.id === id ? { ...q, ...updates } : q))\n    );\n  };\n\n  const deleteQuestion = (id: string) => {\n    setQuestions(prev => prev.filter(q => q.id !== id));\n  };\n\n  return {\n    questions,\n    setQuestions,\n    addQuestion,\n    updateQuestion,\n    deleteQuestion\n  };\n};\n\nexport default useQuestions;","import { useState, useEffect } from 'react';\n\nexport interface Section {\n  id: string;\n  title: string;\n  code: string;\n  isMandatory: boolean; // Indicates if this section is always included\n}\n\nexport const useSections = () => {\n  const [sections, setSections] = useState<Section[]>(() => {\n    const savedSections = localStorage.getItem('admin_sections');\n    return savedSections ? JSON.parse(savedSections) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('admin_sections', JSON.stringify(sections));\n  }, [sections]);\n\n  const addSection = () => {\n    const newSection: Section = {\n      id: `section-${Date.now()}`,\n      title: 'New Section',\n      code: '',\n      isMandatory: false\n    };\n    setSections(prev => [...prev, newSection]);\n  };\n\n  const updateSection = (id: string, updates: Partial<Section>) => {\n    setSections(prev =>\n      prev.map(s => (s.id === id ? { ...s, ...updates } : s))\n    );\n  };\n\n  const deleteSection = (id: string) => {\n    setSections(prev => prev.filter(s => s.id !== id));\n  };\n\n  const reorderSections = (newOrder: Section[]) => {\n    setSections(newOrder);\n  };\n\n  return {\n    sections,\n    setSections,\n    addSection,\n    updateSection,\n    deleteSection,\n    reorderSections\n  };\n};\n\nexport default useSections;","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { openDB, type IDBPDatabase, type DBSchema } from 'idb';\n\ninterface ImageDBSchema extends DBSchema {\n  images: {\n    key: string;\n    value: string;\n  };\n}\n\nconst DB_NAME = 'ImageStore';\nconst STORE_NAME = 'images';\nconst DB_VERSION = 1;\n\nlet dbPromise: Promise<IDBPDatabase<ImageDBSchema>> | null = null;\n\nconst initDB = async (): Promise<IDBPDatabase<ImageDBSchema>> => {\n  if (!dbPromise) {\n    dbPromise = openDB<ImageDBSchema>(DB_NAME, DB_VERSION, {\n      upgrade(db: IDBPDatabase<ImageDBSchema>) {\n        if (!db.objectStoreNames.contains(STORE_NAME)) {\n          db.createObjectStore(STORE_NAME);\n          console.log(`[IndexedDB] Object store \"${STORE_NAME}\" created.`);\n        }\n      },\n    });\n    console.log('[IndexedDB] Database connection initialized.');\n  }\n  return dbPromise;\n};\n\nexport const useImageDB = () => {\n  const addImage = async (id: string, base64Data: string): Promise<void> => {\n    try {\n      const db = await initDB();\n      await db.put(STORE_NAME, base64Data, id);\n      console.log(`[IndexedDB] Image added/updated with ID: ${id}`);\n    } catch (error) {\n      console.error(`[IndexedDB] Failed to add/update image ${id}:`, error);\n      throw error;\n    }\n  };\n\n  const getImage = async (id: string): Promise<string | undefined> => {\n    try {\n      const db = await initDB();\n      const data = await db.get(STORE_NAME, id);\n      console.log(`[IndexedDB] Image retrieved for ID: ${id}, Data found: ${!!data}`);\n      return data;\n    } catch (error) {\n      console.error(`[IndexedDB] Failed to get image ${id}:`, error);\n      return undefined;\n    }\n  };\n\n  const deleteImage = async (id: string): Promise<void> => {\n    try {\n      const db = await initDB();\n      await db.delete(STORE_NAME, id);\n      console.log(`[IndexedDB] Image deleted with ID: ${id}`);\n    } catch (error) {\n      console.error(`[IndexedDB] Failed to delete image ${id}:`, error);\n      // Decide if you want to throw here or just log\n    }\n  };\n\n  const clearStore = async (): Promise<void> => {\n    try {\n      const db = await initDB();\n      await db.clear(STORE_NAME);\n      console.log(`[IndexedDB] Store \"${STORE_NAME}\" cleared.`);\n    } catch (error) {\n      console.error(`[IndexedDB] Failed to clear store \"${STORE_NAME}\":`, error);\n    }\n  };\n\n  return { addImage, getImage, deleteImage, clearStore };\n};\n\n// Initialize DB connection early but don't block\ninitDB().catch(err => console.error('[IndexedDB] Failed to initialize database:', err));","import { useState, useEffect } from 'react';\nimport { useImageDB } from './useImageDB';\nimport type { ContentItem } from './useAdminContent';\n\n// This hook bridges the gap between the admin dashboard's image storage\n// and the main page's image display\nexport const useImageBridge = () => {\n  const { getImage } = useImageDB();\n  const [imageCache, setImageCache] = useState<Record<string, string>>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load content metadata from localStorage\n  const loadContentMetadata = (): ContentItem[] => {\n    try {\n      const savedContents = localStorage.getItem('admin_contents');\n      return savedContents ? JSON.parse(savedContents) : [];\n    } catch (e) {\n      console.error('Failed to load content metadata:', e);\n      return [];\n    }\n  };\n\n  // Load all images from IndexedDB\n  useEffect(() => {\n    const loadImages = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        const contents = loadContentMetadata();\n        const imageIds = contents\n          .filter(item => item.type === 'banner' || item.type === 'scanner')\n          .map(item => item.imageId)\n          .filter(Boolean);\n        \n        console.log('[ImageBridge] Loading images:', imageIds);\n        \n        const imagePromises = imageIds.map(async (imageId) => {\n          if (!imageId) return null;\n          \n          try {\n            const imageData = await getImage(imageId);\n            if (imageData) {\n              return { imageId, imageData };\n            }\n            console.warn(`[ImageBridge] Image not found: ${imageId}`);\n            return null;\n          } catch (err) {\n            console.error(`[ImageBridge] Failed to load image ${imageId}:`, err);\n            return null;\n          }\n        });\n        \n        const results = await Promise.all(imagePromises);\n        const newCache: Record<string, string> = {};\n        \n        results.forEach(result => {\n          if (result) {\n            newCache[result.imageId] = result.imageData;\n          }\n        });\n        \n        setImageCache(newCache);\n        console.log('[ImageBridge] Images loaded:', Object.keys(newCache).length);\n      } catch (err) {\n        console.error('[ImageBridge] Failed to load images:', err);\n        setError('Failed to load images');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadImages();\n  }, [getImage]);\n  \n  // Get image data for a specific content item\n  const getImageForContent = (content: ContentItem): string | null => {\n    if (!content.imageId) {\n      console.warn('[ImageBridge] Content has no imageId:', content.id);\n      return null;\n    }\n    \n    const imageData = imageCache[content.imageId];\n    if (!imageData) {\n      console.warn('[ImageBridge] Image not found in cache:', content.imageId);\n      return null;\n    }\n    \n    return imageData;\n  };\n  \n  return {\n    imageCache,\n    loading,\n    error,\n    getImageForContent\n  };\n};\n\nexport default useImageBridge;\n","import { ReactNode } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface FormFieldProps {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  required?: boolean;\n  children?: ReactNode;\n  fullWidth?: boolean;\n}\n\nconst FormField = ({\n  label,\n  error,\n  helperText,\n  required,\n  children,\n  fullWidth = false\n}: FormFieldProps) => {\n  return (\n    <div className={`${fullWidth ? 'w-full' : ''} space-y-1`}>\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"mt-1\">{children}</div>\n\n      {(error || helperText) && (\n        <div className=\"mt-1\">\n          {error ? (\n            <motion.p\n              initial={{ opacity: 0, y: -10 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"text-sm text-red-600\"\n            >\n              {error}\n            </motion.p>\n          ) : helperText ? (\n            <p className=\"text-sm text-gray-500\">{helperText}</p>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype InputFieldProps = Omit<FormFieldProps, 'children'> & JSX.IntrinsicElements['input'];\ntype TextAreaFieldProps = Omit<FormFieldProps, 'children'> & JSX.IntrinsicElements['textarea'];\ntype SelectFieldProps = Omit<FormFieldProps, 'children'> & JSX.IntrinsicElements['select'] & {\n  children: ReactNode;\n};\n\n// Additional helper components for common field types\nexport const TextField = ({\n  label,\n  error,\n  helperText,\n  required,\n  fullWidth,\n  ...inputProps\n}: InputFieldProps) => {\n  return (\n    <FormField\n      label={label}\n      error={error}\n      helperText={helperText}\n      required={required}\n      fullWidth={fullWidth}\n    >\n      <input\n        className={`\n          block rounded-md shadow-sm\n          ${fullWidth ? 'w-full' : 'w-auto'}\n          ${\n            error\n              ? 'border-red-500 focus:ring-red-500 focus:border-red-500'\n              : 'border-gray-300 focus:ring-blue-500 focus:border-blue-500'\n          }\n          disabled:bg-gray-50 disabled:text-gray-500\n        `}\n        {...inputProps}\n      />\n    </FormField>\n  );\n};\n\nexport const TextArea = ({\n  label,\n  error,\n  helperText,\n  required,\n  fullWidth,\n  ...textareaProps\n}: TextAreaFieldProps) => {\n  return (\n    <FormField\n      label={label}\n      error={error}\n      helperText={helperText}\n      required={required}\n      fullWidth={fullWidth}\n    >\n      <textarea\n        className={`\n          block rounded-md shadow-sm\n          ${fullWidth ? 'w-full' : 'w-auto'}\n          ${\n            error\n              ? 'border-red-500 focus:ring-red-500 focus:border-red-500'\n              : 'border-gray-300 focus:ring-blue-500 focus:border-blue-500'\n          }\n          disabled:bg-gray-50 disabled:text-gray-500\n        `}\n        {...textareaProps}\n      />\n    </FormField>\n  );\n};\n\nexport const SelectField = ({\n  label,\n  error,\n  helperText,\n  required,\n  fullWidth,\n  children,\n  ...selectProps\n}: SelectFieldProps) => {\n  return (\n    <FormField\n      label={label}\n      error={error}\n      helperText={helperText}\n      required={required}\n      fullWidth={fullWidth}\n    >\n      <select\n        className={`\n          block rounded-md shadow-sm\n          ${fullWidth ? 'w-full' : 'w-auto'}\n          ${\n            error\n              ? 'border-red-500 focus:ring-red-500 focus:border-red-500'\n              : 'border-gray-300 focus:ring-blue-500 focus:border-blue-500'\n          }\n          disabled:bg-gray-50 disabled:text-gray-500\n        `}\n        {...selectProps}\n      >\n        {children}\n      </select>\n    </FormField>\n  );\n};\n\nexport const CheckboxField = ({\n  label,\n  error,\n  helperText,\n  required,\n  ...checkboxProps\n}: InputFieldProps) => {\n  return (\n    <FormField\n      error={error}\n      helperText={helperText}\n      required={required}\n    >\n      <div className=\"flex items-center\">\n        <input\n          type=\"checkbox\"\n          className={`\n            rounded border-gray-300 text-blue-600 shadow-sm\n            focus:border-blue-300 focus:ring focus:ring-offset-0 focus:ring-blue-200 focus:ring-opacity-50\n            ${error ? 'border-red-500' : ''}\n          `}\n          {...checkboxProps}\n        />\n        {label && (\n          <label className=\"ml-2 block text-sm text-gray-900\">\n            {label}\n            {required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n        )}\n      </div>\n    </FormField>\n  );\n};\n\nexport default FormField;","import React, { useState, useEffect } from 'react';\n\ninterface ImageDisplayProps {\n  src: string;\n  alt: string;\n  scale?: number;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst ImageDisplay: React.FC<ImageDisplayProps> = ({ \n  src, \n  alt, \n  scale = 1, \n  className = '', \n  style = {} \n}) => {\n  const [imageSrc, setImageSrc] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n\n    // Handle different types of image sources\n    if (!src) {\n      setError('No image source provided');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // If it's already a valid URL or data URL, use it directly\n      if (src.startsWith('http') || src.startsWith('data:') || src.startsWith('blob:')) {\n        setImageSrc(src);\n        setIsLoading(false);\n      } else {\n        // If it's a base64 string without the data URL prefix, add it\n        if (src.startsWith('/9j/') || src.startsWith('iVBOR')) {\n          setImageSrc(`data:image/jpeg;base64,${src}`);\n        } else {\n          // Just use the source as is\n          setImageSrc(src);\n        }\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.error('Error setting image source:', err);\n      setError('Failed to load image');\n      setIsLoading(false);\n    }\n  }, [src]);\n\n  // Apply the scale transformation\n  const imageStyle = {\n    ...style,\n    transform: `scale(${scale})`,\n    transformOrigin: 'center center'\n  };\n\n  if (isLoading) {\n    return (\n      <div className={`flex items-center justify-center bg-gray-100 dark:bg-gray-700 ${className}`}>\n        <div className=\"animate-pulse text-gray-400 dark:text-gray-500\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`flex items-center justify-center bg-gray-100 dark:bg-gray-700 ${className}`}>\n        <div className=\"text-red-500\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <img\n      src={imageSrc}\n      alt={alt}\n      className={className}\n      style={imageStyle}\n      onError={() => {\n        console.error('Image failed to load:', src);\n        setError('Failed to load image');\n      }}\n    />\n  );\n};\n\nexport default ImageDisplay;\n","import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport Modal from '../components/ui/Modal';\nimport { useAdminContent, type ContentItem } from '../hooks/useAdminContent';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport ThemeToggle from '../components/ui/ThemeToggle';\nimport LiveCodePreview from '../components/LiveCodePreview';\nimport { useWizard } from '../contexts/WizardContext';\nimport { useQuestions } from '../hooks/useQuestions';\nimport { useSections } from '../hooks/useSections';\nimport { useImageBridge } from '../hooks/useImageBridge';\nimport type { Question, QuestionOption } from '../types/questions';\nimport { TextField, CheckboxField } from '../components/ui/FormField';\nimport ImageDisplay from '../components/ui/ImageDisplay';\n// import Button from '../components/ui/Button'; // Unused import\n\nconst containerVariants = {\n  initial: { opacity: 0, y: 20 },\n  animate: {\n    opacity: 1,\n    y: 0,\n    transition: { staggerChildren: 0.1 }\n  }\n};\n\nconst itemVariants = {\n  initial: { opacity: 0, y: 10 },\n  animate: { opacity: 1, y: 0 }\n};\n\nconst ScannerWizard = () => {\n  const { getBannerImage, getScannerImages } = useAdminContent();\n  const { imageCache, loading: imagesLoading } = useImageBridge();\n  const { } = useAuth(); // Auth context is used but currentUser is not needed\n  const { theme } = useTheme();\n  const { state: wizardState, dispatch: wizardDispatch } = useWizard();\n  const { questions } = useQuestions(); // Load questions managed by admin\n  const { sections } = useSections(); // Load sections managed by admin\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [selectedTitle, setSelectedTitle] = useState<string>('');\n\n  // Load admin-managed questions and sections into wizard context\n  useEffect(() => {\n    wizardDispatch({ type: 'SET_QUESTIONS', payload: questions });\n  }, [questions, wizardDispatch]);\n\n  useEffect(() => {\n    wizardDispatch({ type: 'SET_SECTIONS', payload: sections });\n  }, [sections, wizardDispatch]);\n\n  // Get banner and scanner images from admin content\n  const [bannerContent, setBannerContent] = useState<any>(null);\n  const [bannerImageData, setBannerImageData] = useState<string | null>(null);\n  const [scannerImages, setScannerImages] = useState<any[]>([]);\n  const [scannerImageDataMap, setScannerImageDataMap] = useState<Record<string, string>>({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const imagesPerPage = 6; // Show 6 images per page (2x3 grid)\n\n  // Load banner and scanner images\n  useEffect(() => {\n    try {\n      // Get banner image metadata\n      const banner = getBannerImage();\n      setBannerContent(banner);\n\n      // Get scanner images metadata\n      const images = getScannerImages();\n      setScannerImages(images);\n\n      console.log('Content metadata loaded:', {\n        bannerFound: !!banner,\n        scannerImagesCount: images.length\n      });\n    } catch (error) {\n      console.error('Error loading content metadata:', error);\n      setBannerContent(null);\n      setScannerImages([]);\n    }\n  }, [getBannerImage, getScannerImages]);\n\n  // Load image data from IndexedDB via the bridge\n  useEffect(() => {\n    if (!imagesLoading && Object.keys(imageCache).length > 0) {\n      console.log('Image cache loaded:', Object.keys(imageCache).length, 'images');\n\n      // Find banner image data\n      if (bannerContent?.id) {\n        // In the real app, we'd use the imageId from the content metadata\n        // For this example, we'll try to find the banner image in the cache\n        const bannerImageId = Object.keys(imageCache).find(key => key.startsWith('banner-'));\n        if (bannerImageId) {\n          setBannerImageData(imageCache[bannerImageId]);\n          console.log('Banner image data found:', bannerImageId);\n        }\n      }\n\n      // Find scanner image data\n      if (scannerImages.length > 0) {\n        const newScannerImageDataMap: Record<string, string> = {};\n\n        // In the real app, we'd use the imageId from each scanner image\n        // For this example, we'll try to find scanner images in the cache\n        const scannerImageIds = Object.keys(imageCache).filter(key => key.startsWith('scanner-'));\n\n        scannerImageIds.forEach((imageId, index) => {\n          if (index < scannerImages.length) {\n            newScannerImageDataMap[scannerImages[index].id] = imageCache[imageId];\n          }\n        });\n\n        setScannerImageDataMap(newScannerImageDataMap);\n        console.log('Scanner image data found:', Object.keys(newScannerImageDataMap).length, 'images');\n      }\n    }\n  }, [imageCache, imagesLoading, bannerContent, scannerImages]);\n\n  // Get current page of images\n  const getCurrentPageImages = () => {\n    const startIndex = (currentPage - 1) * imagesPerPage;\n    return scannerImages.slice(startIndex, startIndex + imagesPerPage);\n  };\n\n  // Calculate total pages\n  const totalPages = Math.ceil(scannerImages.length / imagesPerPage);\n\n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleAnswerChange = (questionId: string, value: any) => {\n    wizardDispatch({ type: 'SET_ANSWER', payload: { questionId, value } });\n  };\n\n  const renderQuestionInput = (question: Question) => {\n    const answer = wizardState.answers[question.id];\n\n    switch (question.type) {\n      case 'text':\n        return (\n          <TextField\n            label={question.text}\n            value={(answer as string) || ''}\n            onChange={(e) => handleAnswerChange(question.id, e.target.value)}\n            required={question.required}\n            className=\"text-gray-900 dark:text-white bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600\"\n          />\n        );\n      case 'choice':\n        return (\n          <div className=\"space-y-3\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {question.text} {question.required && <span className=\"text-red-500\">*</span>}\n            </label>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              {question.options?.map((option: QuestionOption) => (\n                <label\n                  key={option.id}\n                  className={`\n                    flex flex-col items-center p-4 border rounded-lg cursor-pointer\n                    transition-all duration-150 ease-in-out\n                    ${(answer === option.value)\n                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/30 ring-2 ring-blue-500'\n                      : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                    }\n                  `}\n                >\n                  <input\n                    type=\"radio\" // Assuming single choice for now\n                    name={question.id}\n                    value={option.value}\n                    checked={answer === option.value}\n                    onChange={() => handleAnswerChange(question.id, option.value)}\n                    className=\"sr-only\" // Hide default radio\n                  />\n                  {option.imageUrl && (\n                    <img\n                      src={option.imagePreview || option.imageUrl}\n                      alt={option.text}\n                      className=\"w-full h-32 object-contain mb-2 rounded\"\n                      style={{ transform: `scale(${option.scale || 1})` }}\n                    />\n                  )}\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white text-center\">{option.text}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n        );\n      case 'boolean':\n        return (\n          <CheckboxField\n            label={question.text}\n            checked={!!answer}\n            onChange={(e) => handleAnswerChange(question.id, e.target.checked)}\n            required={question.required}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={theme === 'dark' ? 'dark' : ''}>\n      <div className=\"min-h-screen bg-white dark:bg-gray-900 transition-colors duration-200\">\n        <ThemeToggle />\n        <motion.div\n          variants={containerVariants}\n          initial=\"initial\"\n          animate=\"animate\"\n          className=\"relative\"\n        >\n          {/* Title Section */}\n          <motion.div\n            variants={itemVariants}\n            className=\"py-12 px-4 text-center\"\n          >\n            <h1 className=\"text-5xl md:text-6xl lg:text-7xl font-bold text-gray-900 dark:text-white font-display tracking-tight\">\n              COMET Scanner Template Wizard\n            </h1>\n          </motion.div>\n\n          {/* Banner Section */}\n          <motion.div\n            variants={itemVariants}\n            className=\"relative w-full mb-12 bg-gray-100 dark:bg-gray-800\"\n          >\n            {imagesLoading && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 dark:bg-gray-800 bg-opacity-75 dark:bg-opacity-75 z-10\">\n                <div className=\"text-blue-600 dark:text-blue-400 text-xl font-medium\">Loading images...</div>\n              </div>\n            )}\n            {bannerImageData ? (\n              <div className=\"relative w-full flex items-center justify-center overflow-hidden\">\n                <div className=\"w-full\" style={{ paddingBottom: '42.85%' }}>\n                  <ImageDisplay\n                    src={bannerImageData}\n                    alt=\"COMET Scanner Banner\"\n                    scale={bannerContent?.scale || 1}\n                    className=\"absolute top-0 left-0 w-full h-full object-contain transition-transform duration-300\"\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className=\"w-full\" style={{ paddingBottom: '42.85%' }}>\n                <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600 to-purple-600 flex items-center justify-center\">\n                  <span className=\"text-3xl text-white font-semibold\">\n                    Visualize Your Data with COMET Scanner\n                  </span>\n                </div>\n              </div>\n            )}\n          </motion.div>\n\n          {/* Scanner Variations Gallery */}\n          {Object.keys(scannerImageDataMap).length > 0 && (\n            <motion.div\n              variants={itemVariants}\n              className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mb-16\"\n            >\n              <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-8 text-center\">\n                Scanner Variations\n              </h2>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {getCurrentPageImages().map((image) => (\n                  <div\n                    key={image.id}\n                    className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden cursor-pointer transform transition-transform hover:scale-105\"\n                    onClick={() => {\n                      setSelectedImage(scannerImageDataMap[image.id] || '');\n                      setSelectedTitle(image.displayText || 'Scanner Variation');\n                    }}\n                  >\n                    <div className=\"aspect-video bg-gray-100 dark:bg-gray-700 relative overflow-hidden\">\n                      <ImageDisplay\n                        src={scannerImageDataMap[image.id] || ''}\n                        alt={image.alt}\n                        scale={image.scale || 1}\n                        className=\"w-full h-full object-contain\"\n                      />\n                    </div>\n                    {image.displayText && (\n                      <div className=\"p-4\">\n                        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                          {image.displayText}\n                        </h3>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              {/* Pagination Controls */}\n              {totalPages > 1 && (\n                <div className=\"flex justify-center mt-8\">\n                  <nav className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => handlePageChange(Math.max(1, currentPage - 1))}\n                      disabled={currentPage === 1}\n                      className={`px-3 py-1 rounded ${currentPage === 1 ? 'bg-gray-100 text-gray-400 cursor-not-allowed dark:bg-gray-700 dark:text-gray-500' : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'}`}\n                    >\n                      Previous\n                    </button>\n\n                    {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n                      <button\n                        key={page}\n                        onClick={() => handlePageChange(page)}\n                        className={`w-8 h-8 rounded flex items-center justify-center ${page === currentPage ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'}`}\n                      >\n                        {page}\n                      </button>\n                    ))}\n\n                    <button\n                      onClick={() => handlePageChange(Math.min(totalPages, currentPage + 1))}\n                      disabled={currentPage === totalPages}\n                      className={`px-3 py-1 rounded ${currentPage === totalPages ? 'bg-gray-100 text-gray-400 cursor-not-allowed dark:bg-gray-700 dark:text-gray-500' : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'}`}\n                    >\n                      Next\n                    </button>\n                  </nav>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {/* Main Content Area */}\n          <div className=\"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-16 grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Left Column: Questions */}\n            <div className=\"lg:col-span-2 space-y-8\">\n              <motion.div variants={itemVariants}>\n                <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-6\">\n                  Configure Your Template\n                </h2>\n                <div className=\"space-y-6\">\n                  {wizardState.questions.map((question: Question) => (\n                    <div key={question.id} className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700\">\n                      {renderQuestionInput(question)}\n                    </div>\n                  ))}\n                  {wizardState.questions.length === 0 && (\n                     <p className=\"text-gray-500 dark:text-gray-400\">No questions configured yet. Please set them up in the Admin Dashboard.</p>\n                  )}\n                </div>\n              </motion.div>\n            </div>\n\n            {/* Right Column: Live Preview */}\n            <div className=\"lg:col-span-1\">\n              <LiveCodePreview />\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Lightbox Modal */}\n        {selectedImage && (\n          <Modal\n            isOpen={true}\n            onClose={() => {\n              setSelectedImage(null);\n              setSelectedTitle('');\n            }}\n            title={selectedTitle}\n            size=\"xl\"\n          >\n            <div className=\"relative\">\n              <div className=\"flex justify-center items-center bg-white dark:bg-gray-800 rounded-lg p-4\">\n                <ImageDisplay\n                  src={selectedImage || ''}\n                  alt={selectedTitle}\n                  className=\"max-w-full max-h-[80vh] object-contain\"\n                />\n              </div>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ScannerWizard;"],"names":["overlayVariants","modalVariants","Modal","isOpen","onClose","title","children","footer","size","showCloseButton","sizeClasses","AnimatePresence","Fragment","jsx","motion","jsxs","e","LRUCache","maxSize","__publicField","key","item","value","ttl","firstKey","expiry","memoize","fn","options","maxCacheSize","cache","memoized","args","cachedResult","result","error","useAdminContent","contents","setContents","useState","useEffect","loadContents","savedContents","handleStorageChange","filterBanners","useMemo","items","getBannerImage","useCallback","banners","banner","filterScanners","sortByUpdatedAt","a","b","transformToImageContent","imageContent","getScannerImages","filtered","sorted","filterTemplates","transformToTemplates","getTemplates","filterQuestions","transformToQuestions","getQuestions","LiveCodePreview","state","useWizard","answers","sections","questions","getMandatorySections","sectionList","section","findQuestionById","questionList","id","q","findSectionById","s","replacePlaceholders","code","variable","regex","generateMandatoryCode","mandatorySections","includedIds","processAnswers","answersObj","questionId","answerValue","question","sectionIdToInclude","optionValue","selectedOption","_a","opt","sectionCode","generatedCode","mandatoryCode","answersCode","useQuestions","setQuestions","savedQuestions","option","cleanupImageUrl","type","newQuestion","prev","updates","useSections","setSections","savedSections","newSection","newOrder","instanceOfAny","object","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","transactionDoneMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","wrap","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","replaceTraps","callback","wrapFunction","func","unwrap","transformCachableValue","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","openPromise","event","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","proxiedCursor","isIteratorProp","DB_NAME","STORE_NAME","DB_VERSION","dbPromise","initDB","useImageDB","base64Data","data","err","useImageBridge","getImage","imageCache","setImageCache","loading","setLoading","setError","loadContentMetadata","imageIds","imagePromises","imageId","imageData","results","newCache","content","FormField","label","helperText","required","fullWidth","TextField","inputProps","CheckboxField","checkboxProps","ImageDisplay","src","alt","scale","className","style","imageSrc","setImageSrc","isLoading","setIsLoading","imageStyle","containerVariants","itemVariants","ScannerWizard","imagesLoading","useAuth","theme","useTheme","wizardState","wizardDispatch","selectedImage","setSelectedImage","selectedTitle","setSelectedTitle","bannerContent","setBannerContent","bannerImageData","setBannerImageData","scannerImages","setScannerImages","scannerImageDataMap","setScannerImageDataMap","currentPage","setCurrentPage","imagesPerPage","images","bannerImageId","newScannerImageDataMap","index","getCurrentPageImages","startIndex","totalPages","handlePageChange","page","handleAnswerChange","renderQuestionInput","answer","ThemeToggle","image","_","i"],"mappings":"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","x_google_ignoreList":[6]}